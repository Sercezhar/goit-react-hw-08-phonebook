{"version":3,"file":"static/js/795.eb16f5b8.chunk.js","mappings":"6KACA,MAAwB,uB,UCEjB,SAASA,EAAT,GAA4C,IAAzBC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC9BC,EAAS,UAAMH,GAErB,OACE,+BACGC,IAAS,SAACE,EAAD,CAAWC,UAAWC,EAAtB,SAAqCJ,IAC9CC,O,qDCRP,MAA4B,mC,UCCrB,SAASI,EAAT,GAAwC,IAAbJ,EAAY,EAAZA,SAChC,OAAO,gBAAKE,UAAWC,EAAhB,SAAmCH,M,wHCCrC,SAASK,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,YAC/CC,GAASH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASI,UAC7CC,GAASJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASK,UAMnD,MAAO,CACLP,SAAAA,EACAE,SAAAA,EACAI,OAAAA,EACAC,OAAAA,EACAC,WATuB,SAAAC,GAAU,OAAIT,GAASQ,EAAAA,EAAAA,IAAWC,KAUzDC,cAT0B,SAAAC,GAAE,OAAIX,GAASU,EAAAA,EAAAA,IAAcC,KAUvDC,UATsB,SAAAC,GAAK,OAAIb,GAASY,EAAAA,EAAAA,GAAUC,M,kFCP/C,SAASC,IACd,MAAiCf,IAAzBG,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,WAElB,GAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEA,SAASC,IACPH,EAAQ,IACRE,EAAU,IAGZ,SAASE,EAAkBC,GACzB,MAAwBA,EAAMC,cAAtBP,EAAR,EAAQA,KAAMH,EAAd,EAAcA,MAED,SAATG,GACFC,EAAQJ,GAGG,WAATG,GACFG,EAAUN,GAnBc,wCAuB5B,WAA4BS,GAA5B,4EACEA,EAAME,iBACAf,EAAa,CACjBO,KAAAA,EACAE,OAAAA,GAGIO,EAAoBvB,EAASwB,MACjC,SAAAC,GAAO,OAAIA,EAAQX,KAAKY,gBAAkBnB,EAAWO,KAAKY,iBAR9D,UAYQH,EAZR,gBAaMI,EAAAA,GAAAA,MAAA,UAAepB,EAAWO,KAAKc,cAA/B,6BAbN,wCAeYtB,EAAWC,GAfvB,QAgBMoB,EAAAA,GAAAA,QAAA,UAAiBpB,EAAWO,KAAKc,cAAjC,2BAhBN,0DAmBIC,QAAQC,IAAR,MAnBJ,QAsBEZ,IAtBF,2DAvB4B,sBAgD5B,OACE,kBAAMxB,UAAWC,EAAAA,EAAAA,KAAaoC,aAAa,MAAMC,SAjDvB,4CAiD1B,WACE,kBAAOtC,UAAWC,EAAAA,EAAAA,MAAlB,UACE,kBACED,UAAWC,EAAAA,EAAAA,MACXsC,KAAK,OACLnB,KAAK,OACLoB,YAAY,OACZvB,MAAOG,EACPqB,QAAQ,yHACR5C,MAAM,yIACN6C,UAAQ,EACRC,SAAUlB,OAId,kBAAOzB,UAAWC,EAAAA,EAAAA,MAAlB,UACE,kBACED,UAAWC,EAAAA,EAAAA,MACXsC,KAAK,MACLnB,KAAK,SACLoB,YAAY,SACZvB,MAAOK,EACPmB,QAAQ,yFACR5C,MAAM,+FACN6C,UAAQ,EACRC,SAAUlB,OAGd,mBAAQc,KAAK,SAASvC,UAAWC,EAAAA,EAAAA,UAAjC,4B,cCjFN,EAAuB,8BAAvB,EAA+D,iCAA/D,EAAuG,8BAAvG,EAA8I,gCAA9I,EAAqL,8BAArL,EAA+N,mCCKxN,SAAS2C,EAAT,GAAgD,IAArB7B,EAAoB,EAApBA,GAAIK,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,OAClCR,EAAkBX,IAAlBW,cAD4C,wCAGpD,WAAmCC,EAAIK,GAAvC,0FAEUN,EAAcC,GAFxB,OAGIkB,EAAAA,GAAAA,KAAA,UAAcb,EAAKc,cAAnB,qCAHJ,+CAKIC,QAAQC,IAAR,MALJ,wDAHoD,wBAYpD,OACE,gBAAIpC,UAAWC,EAAf,WACE,kBAAMD,UAAWC,EAAjB,WACE,kBAAMD,UAAWC,EAAjB,WACE,SAAC,MAAD,CAAUD,UAAWC,IACpBmB,KACK,KACR,kBAAMpB,UAAWC,EAAjB,WACE,SAAC,MAAD,CAASD,UAAWC,IACnBqB,SAGL,mBACEiB,KAAK,SACLvC,UAAWC,EACX4C,QAAS,kBA3BqC,6CA2B/BC,CAAoB/B,EAAIK,IAHzC,UAKE,SAAC,MAAD,CAAUpB,UAAWC,SC7BtB,SAAS8C,IACd,MAAuC5C,IAA/BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,SAAUI,EAA5B,EAA4BA,OAEtBsC,EAAmB1C,EACtBI,QAAO,SAAAqB,GAAO,OACbA,EAAQX,KAAKY,cAAciB,SAASvC,EAAOsB,kBAE5CkB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE/B,KAAKiC,cAAcD,EAAEhC,SAMzC,OAJAkC,EAAAA,EAAAA,YAAU,WACRlD,GAASmD,EAAAA,EAAAA,SACR,CAACnD,KAGF,8BACGE,IACC,wBACG0C,EAAiBQ,KAAI,gBAAGzC,EAAH,EAAGA,GAAIK,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACpB,SAACsB,EAAD,CAA0B7B,GAAIA,EAAIK,KAAMA,EAAME,OAAQA,GAAhCP,UCvBlC,MAAwB,sBAAxB,EAAsD,sBCE/C,SAAS0C,IACd,MAA8BtD,IAAtBO,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,UAOhB,OACE,kBAAOhB,UAAWC,EAAlB,UACE,kBACED,UAAWC,EACXsC,KAAK,OACLnB,KAAK,SACLoB,YAAY,wBACZvB,MAAOP,EACPiC,SAbN,SAAiCjB,GAC/B,IAAQT,EAAUS,EAAMC,cAAhBV,MACRD,EAAUC,Q,uBCPd,EAA+B,mCCExB,SAASyC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OAAO,8BAAGA,IAAW,eAAI3D,UAAWC,EAAf,SAAqC0D,MCM7C,SAASC,IACtB,MAA6BzD,IAArBG,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,OAClB,OACE,UAACT,EAAA,EAAD,YACe,kBAAXS,GAAyC,eAAXA,KAC9B,SAACkD,EAAA,EAAD,KAGF,SAAClE,EAAA,EAAD,CAASC,IAAK,KAAMC,MAAO,YAA3B,UACE,SAACqB,EAAD,OAGF,UAACvB,EAAA,EAAD,CAASC,IAAK,KAAMC,MAAO,WAA3B,UACc,YAAXc,GAA4C,IAApBL,EAASwD,SAChC,SAAC,KAAD,CACEC,UAAU,oBACVC,OAAQ,GACRC,MAAO,GACPC,YAAa,EACbC,MAAM,qBACNC,eAAe,UAGnB,8BACe,aAAXzD,GAAoC,mBAAXA,GACP,IAApBL,EAASwD,QAGP,gCACGxD,EAASwD,OAAS,IAAK,SAACL,EAAD,KACxB,SAACV,EAAD,QAJF,SAACW,EAAD,CAAcC,QAAS,gC,mBCnCnC,KAAgB,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,UAAY","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/SectionsWrapper/SectionsWrapper.module.css?b8e8","components/SectionsWrapper/SectionsWrapper.jsx","hooks/useContacts.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactListItem/ContactListItem.module.css?fe27","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","pages/PhonebookPage.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Title\":\"Section_Title__FKTo0\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport function Section({ tag, title, children }) {\n  const CustomTag = `${tag}`;\n\n  return (\n    <section>\n      {title && <CustomTag className={styles.Title}>{title}</CustomTag>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  tag: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"SectionsWrapper_Container__dfvdv\"};","import styles from './SectionsWrapper.module.css';\n\nexport function SectionsWrapper({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact, deleteContact } from 'redux/contacts/contactsOperations';\nimport { setFilter } from '../redux/contacts/contactsSlice';\n\nexport function useContacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.entities);\n  const filter = useSelector(state => state.contacts.filter);\n  const status = useSelector(state => state.contacts.status);\n\n  const handleAddContact = newContact => dispatch(addContact(newContact));\n  const handleDeleteContact = id => dispatch(deleteContact(id));\n  const handleSetFilter = value => dispatch(setFilter(value));\n\n  return {\n    dispatch,\n    contacts,\n    filter,\n    status,\n    addContact: handleAddContact,\n    deleteContact: handleDeleteContact,\n    setFilter: handleSetFilter,\n  };\n}\n","import { useState } from 'react';\nimport { useContacts } from 'hooks/useContacts';\nimport { toast } from 'react-toastify';\nimport styles from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const { contacts, addContact } = useContacts();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function resetState() {\n    setName('');\n    setNumber('');\n  }\n\n  function handleInputChange(event) {\n    const { name, value } = event.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    }\n\n    if (name === 'number') {\n      setNumber(value);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n\n    const alreadyInContacts = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    try {\n      if (alreadyInContacts) {\n        toast.error(`${newContact.name.toUpperCase()} is already in contacts.`);\n      } else {\n        await addContact(newContact);\n        toast.success(`${newContact.name.toUpperCase()} is added to contacts.`);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    resetState();\n  }\n\n  return (\n    <form className={styles.Form} autoComplete=\"off\" onSubmit={handleSubmit}>\n      <label className={styles.Label}>\n        <input\n          className={styles.Input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <label className={styles.Label}>\n        <input\n          className={styles.Input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\" className={styles.SubmitBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Item\":\"ContactListItem_Item__xlh1I\",\"Contact\":\"ContactListItem_Contact__5WetT\",\"Name\":\"ContactListItem_Name__OCYDH\",\"Number\":\"ContactListItem_Number__3y14D\",\"Icon\":\"ContactListItem_Icon__WcbrX\",\"DeleteBtn\":\"ContactListItem_DeleteBtn__FnG2B\"};","import PropTypes from 'prop-types';\nimport { useContacts } from 'hooks/useContacts';\nimport { MdDelete, MdPerson, MdPhone } from 'react-icons/md';\nimport { toast } from 'react-toastify';\nimport styles from './ContactListItem.module.css';\n\nexport function ContactListItem({ id, name, number }) {\n  const { deleteContact } = useContacts();\n\n  async function handleDeleteContact(id, name) {\n    try {\n      await deleteContact(id);\n      toast.info(`${name.toUpperCase()} has been removed from contacts.`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <li className={styles.Item}>\n      <span className={styles.Contact}>\n        <span className={styles.Name}>\n          <MdPerson className={styles.Icon} />\n          {name}\n        </span>{' '}\n        <span className={styles.Number}>\n          <MdPhone className={styles.Icon} />\n          {number}\n        </span>\n      </span>\n      <button\n        type=\"button\"\n        className={styles.DeleteBtn}\n        onClick={() => handleDeleteContact(id, name)}\n      >\n        <MdDelete className={styles.Icon} />\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactListItem } from './ContactListItem';\nimport { useEffect } from 'react';\nimport { getContacts } from 'redux/contacts/contactsOperations';\n\nexport function ContactList() {\n  const { dispatch, contacts, filter } = useContacts();\n\n  const filteredContacts = contacts\n    .filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {contacts && (\n        <ul>\n          {filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"Filter_Label__MldcW\",\"Input\":\"Filter_Input__fqOVl\"};","import { useContacts } from 'hooks/useContacts';\nimport styles from './Filter.module.css';\n\nexport function Filter() {\n  const { filter, setFilter } = useContacts();\n\n  function handleFilterInputChange(event) {\n    const { value } = event.currentTarget;\n    setFilter(value);\n  }\n\n  return (\n    <label className={styles.Label}>\n      <input\n        className={styles.Input}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"find contacts by name\"\n        value={filter}\n        onChange={handleFilterInputChange}\n      ></input>\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Notification\":\"Notification_Notification__9HZmX\"};","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nexport function Notification({ message }) {\n  return <>{message && <h3 className={styles.Notification}>{message}</h3>}</>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { SectionsWrapper } from 'components/SectionsWrapper';\nimport { Section } from 'components/Section';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Oval } from 'react-loader-spinner';\nimport { OvalLoader } from 'components/Loaders/OvalLoader';\nimport { Notification } from 'components/Notification';\n\nexport default function PhonebookPage() {\n  const { contacts, status } = useContacts();\n  return (\n    <SectionsWrapper>\n      {(status === 'deleteLoading' || status === 'addLoading') && (\n        <OvalLoader />\n      )}\n\n      <Section tag={'h1'} title={'Phonebook'}>\n        <ContactForm />\n      </Section>\n\n      <Section tag={'h2'} title={'Contacts'}>\n        {status === 'loading' && contacts.length === 0 && (\n          <Oval\n            ariaLabel=\"loading-indicator\"\n            height={30}\n            width={30}\n            strokeWidth={5}\n            color=\"var(--theme-color)\"\n            secondaryColor=\"#ccc\"\n          />\n        )}\n        <>\n          {(status === 'resolved' || status === 'deleteResolved') &&\n          contacts.length === 0 ? (\n            <Notification message={'No contacts added'} />\n          ) : (\n            <>\n              {contacts.length > 0 && <Filter />}\n              <ContactList />\n            </>\n          )}\n        </>\n      </Section>\n    </SectionsWrapper>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"ContactForm_Form__IBmOq\",\"Label\":\"ContactForm_Label__ykus5\",\"Input\":\"ContactForm_Input__+bOEZ\",\"SubmitBtn\":\"ContactForm_SubmitBtn__IC-Dc\"};"],"names":["Section","tag","title","children","CustomTag","className","styles","SectionsWrapper","useContacts","dispatch","useDispatch","contacts","useSelector","state","entities","filter","status","addContact","newContact","deleteContact","id","setFilter","value","ContactForm","useState","name","setName","number","setNumber","resetState","handleInputChange","event","currentTarget","preventDefault","alreadyInContacts","some","contact","toLowerCase","toast","toUpperCase","console","log","autoComplete","onSubmit","type","placeholder","pattern","required","onChange","ContactListItem","onClick","handleDeleteContact","ContactList","filteredContacts","includes","sort","a","b","localeCompare","useEffect","getContacts","map","Filter","Notification","message","PhonebookPage","OvalLoader","length","ariaLabel","height","width","strokeWidth","color","secondaryColor"],"sourceRoot":""}