{"version":3,"file":"static/js/615.55f2b41a.chunk.js","mappings":"6KACA,MAA4B,mC,UCCrB,SAASA,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SAChC,OAAO,gBAAKC,UAAWC,EAAhB,SAAmCF,M,yKCF5C,EAAuB,8BAAvB,EAA+D,iCAA/D,EAAuG,8BAAvG,EAA8I,gCAA9I,EAAqL,8BAArL,EAA6N,iCAA7N,EAAwQ,iCAAxQ,EAAqT,mC,UCM9S,SAASG,EAAT,GAAgD,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACpCC,GAAWC,EAAAA,EAAAA,MACTC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAF4C,wCAIpD,WAAmCL,EAAIC,GAAvC,0FAEUI,EAAcL,GAFxB,OAGIO,EAAAA,GAAAA,QAAA,UAAiBN,EAAKO,cAAtB,qCAHJ,+CAKIC,QAAQC,IAAR,MALJ,wDAJoD,wBAapD,OACE,gBAAIb,UAAWC,EAAf,WACE,kBAAMD,UAAWC,EAAjB,WACE,kBAAMD,UAAWC,EAAjB,WACE,SAAC,MAAD,CAAUD,UAAWC,IACpBG,MAGH,kBAAMJ,UAAWC,EAAjB,WACE,SAAC,MAAD,CAASD,UAAWC,IACnBI,SAIL,kBAAML,UAAWC,EAAjB,WACE,mBACEa,KAAK,SACLd,UAAWC,EACXc,QAAS,kBAAMT,EAAS,kBAAD,OAAmBH,KAH5C,UAKE,SAAC,MAAD,CAAQH,UAAWC,OAGrB,mBACEa,KAAK,SACLd,UAAWC,EACXc,QAAS,kBAvCmC,6CAuC7BC,CAAoBb,EAAIC,IAHzC,UAKE,SAAC,MAAD,CAAUJ,UAAWC,Y,wBC1CxB,SAASgB,IACd,OAAuCR,EAAAA,EAAAA,KAA/BS,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,OAEtBC,EAAmBF,EACtBC,QAAO,SAAAE,GAAO,OACbA,EAAQlB,KAAKmB,cAAcC,SAASJ,EAAOG,kBAE5CE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEtB,KAAKwB,cAAcD,EAAEvB,SAMzC,OAJAyB,EAAAA,EAAAA,YAAU,WACRX,GAASY,EAAAA,EAAAA,SACR,CAACZ,KAGF,8BACGC,IACC,wBACGE,EAAiBU,KAAI,gBAAG5B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACpB,SAACH,EAAD,CAA0BC,GAAIA,EAAIC,KAAMA,EAAMC,OAAQA,GAAhCF,UCvBlC,MAAwB,sBAAxB,EAAsD,sBCE/C,SAAS6B,IACd,OAA8BvB,EAAAA,EAAAA,KAAtBW,EAAR,EAAQA,OAAQa,EAAhB,EAAgBA,UAOhB,OACE,kBAAOjC,UAAWC,EAAlB,UACE,kBACED,UAAWC,EACXa,KAAK,OACLV,KAAK,SACL8B,YAAY,wBACZC,MAAOf,EACPgB,SAbN,SAAiCC,GAC/B,IAAQF,EAAUE,EAAMC,cAAhBH,MACRF,EAAUE,Q,uBCPd,EAA+B,mCCExB,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OAAO,8BAAGA,IAAW,eAAIxC,UAAWC,EAAf,SAAqCuC,MCQ7C,SAASC,IACtB,OAAyChC,EAAAA,EAAAA,KAAjCU,EAAR,EAAQA,SAAUuB,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,WAEpBC,EAAgB,mCAAG,WAAMC,GAAN,0EACjBC,EAAoB3B,EAAS4B,MACjC,SAAAzB,GAAO,OAAIA,EAAQlB,KAAKmB,gBAAkBsB,EAAKzC,KAAKmB,iBAF/B,UAMjBuB,EANiB,gBAOnBpC,EAAAA,GAAAA,MAAA,UAAemC,EAAKzC,KAAKO,cAAzB,6BAPmB,sCASbgC,EAAWE,GATE,OAUnBnC,EAAAA,GAAAA,QAAA,UAAiBmC,EAAKzC,KAAKO,cAA3B,2BAVmB,yDAarBC,QAAQC,IAAR,MAbqB,0DAAH,sDAiBtB,OACE,UAACf,EAAA,EAAD,WACc,aAAX4C,IAAyB,SAACM,EAAA,EAAD,KAE1B,SAACC,EAAA,EAAD,CAASC,IAAK,KAAMC,MAAO,YAA3B,UACE,SAACC,EAAA,EAAD,CAAaC,SAAUT,EAAkBU,QAAS,mBAGpD,UAACL,EAAA,EAAD,CAASC,IAAK,KAAMC,MAAO,WAA3B,UACc,YAAXT,GAA4C,IAApBvB,EAASoC,SAChC,SAAC,KAAD,CACEC,UAAU,oBACVC,OAAQ,GACRC,MAAO,GACPC,YAAa,EACbC,MAAM,qBACNC,eAAe,UAGnB,8BACe,aAAXnB,GAAoC,mBAAXA,GACP,IAApBvB,EAASoC,QAGP,gCACGpC,EAASoC,OAAS,IAAK,SAACvB,EAAD,KACxB,SAACf,EAAD,QAJF,SAACsB,EAAD,CAAcC,QAAS,4BAU7B,SAAC,KAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/SectionsWrapper/SectionsWrapper.module.css?b8e8","components/SectionsWrapper/SectionsWrapper.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactListItem/ContactListItem.module.css?fe27","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"SectionsWrapper_Container__dfvdv\"};","import styles from './SectionsWrapper.module.css';\n\nexport function SectionsWrapper({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Item\":\"ContactListItem_Item__xlh1I\",\"Contact\":\"ContactListItem_Contact__5WetT\",\"Name\":\"ContactListItem_Name__OCYDH\",\"Number\":\"ContactListItem_Number__3y14D\",\"Icon\":\"ContactListItem_Icon__WcbrX\",\"Buttons\":\"ContactListItem_Buttons__Hv+Du\",\"EditBtn\":\"ContactListItem_EditBtn__f9-m0\",\"DeleteBtn\":\"ContactListItem_DeleteBtn__FnG2B\",\"Input\":\"ContactListItem_Input__e7zza\"};","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport { useContacts } from 'hooks/useContacts';\nimport { MdDelete, MdEdit, MdPerson, MdPhone } from 'react-icons/md';\nimport toast from 'react-hot-toast';\nimport styles from './ContactListItem.module.css';\n\nexport function ContactListItem({ id, name, number }) {\n  const navigate = useNavigate();\n  const { deleteContact } = useContacts();\n\n  async function handleDeleteContact(id, name) {\n    try {\n      await deleteContact(id);\n      toast.success(`${name.toUpperCase()} has been removed from contacts.`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <li className={styles.Item}>\n      <span className={styles.Contact}>\n        <span className={styles.Name}>\n          <MdPerson className={styles.Icon} />\n          {name}\n        </span>\n\n        <span className={styles.Number}>\n          <MdPhone className={styles.Icon} />\n          {number}\n        </span>\n      </span>\n\n      <span className={styles.Buttons}>\n        <button\n          type=\"button\"\n          className={styles.EditBtn}\n          onClick={() => navigate(`/contacts/edit/${id}`)}\n        >\n          <MdEdit className={styles.Icon} />\n        </button>\n\n        <button\n          type=\"button\"\n          className={styles.DeleteBtn}\n          onClick={() => handleDeleteContact(id, name)}\n        >\n          <MdDelete className={styles.Icon} />\n        </button>\n      </span>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactListItem } from './ContactListItem';\nimport { useEffect } from 'react';\nimport { getContacts } from 'redux/contacts/contactsOperations';\n\nexport function ContactList() {\n  const { dispatch, contacts, filter } = useContacts();\n\n  const filteredContacts = contacts\n    .filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {contacts && (\n        <ul>\n          {filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"Filter_Label__MldcW\",\"Input\":\"Filter_Input__fqOVl\"};","import { useContacts } from 'hooks/useContacts';\nimport styles from './Filter.module.css';\n\nexport function Filter() {\n  const { filter, setFilter } = useContacts();\n\n  function handleFilterInputChange(event) {\n    const { value } = event.currentTarget;\n    setFilter(value);\n  }\n\n  return (\n    <label className={styles.Label}>\n      <input\n        className={styles.Input}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"find contacts by name\"\n        value={filter}\n        onChange={handleFilterInputChange}\n      ></input>\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Notification\":\"Notification_Notification__9HZmX\"};","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nexport function Notification({ message }) {\n  return <>{message && <h3 className={styles.Notification}>{message}</h3>}</>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { Outlet } from 'react-router-dom';\nimport { useContacts } from 'hooks/useContacts';\nimport { SectionsWrapper } from 'components/SectionsWrapper';\nimport { Section } from 'components/Section';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Oval } from 'react-loader-spinner';\nimport { OvalLoader } from 'components/Loaders/OvalLoader';\nimport { Notification } from 'components/Notification';\nimport toast from 'react-hot-toast';\n\nexport default function PhonebookPage() {\n  const { contacts, status, addContact } = useContacts();\n\n  const handleAddContact = async data => {\n    const alreadyInContacts = contacts.some(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    );\n\n    try {\n      if (alreadyInContacts) {\n        toast.error(`${data.name.toUpperCase()} is already in contacts.`);\n      } else {\n        await addContact(data);\n        toast.success(`${data.name.toUpperCase()} is added to contacts.`);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <SectionsWrapper>\n      {status === 'updating' && <OvalLoader />}\n\n      <Section tag={'h1'} title={'Phonebook'}>\n        <ContactForm onSubmit={handleAddContact} btnText={'Add contact'} />\n      </Section>\n\n      <Section tag={'h2'} title={'Contacts'}>\n        {status === 'loading' && contacts.length === 0 && (\n          <Oval\n            ariaLabel=\"loading-indicator\"\n            height={30}\n            width={30}\n            strokeWidth={5}\n            color=\"var(--theme-color)\"\n            secondaryColor=\"#ccc\"\n          />\n        )}\n        <>\n          {(status === 'resolved' || status === 'deleteResolved') &&\n          contacts.length === 0 ? (\n            <Notification message={'No contacts added'} />\n          ) : (\n            <>\n              {contacts.length > 0 && <Filter />}\n              <ContactList />\n            </>\n          )}\n        </>\n      </Section>\n\n      <Outlet />\n    </SectionsWrapper>\n  );\n}\n"],"names":["SectionsWrapper","children","className","styles","ContactListItem","id","name","number","navigate","useNavigate","deleteContact","useContacts","toast","toUpperCase","console","log","type","onClick","handleDeleteContact","ContactList","dispatch","contacts","filter","filteredContacts","contact","toLowerCase","includes","sort","a","b","localeCompare","useEffect","getContacts","map","Filter","setFilter","placeholder","value","onChange","event","currentTarget","Notification","message","PhonebookPage","status","addContact","handleAddContact","data","alreadyInContacts","some","OvalLoader","Section","tag","title","ContactForm","onSubmit","btnText","length","ariaLabel","height","width","strokeWidth","color","secondaryColor"],"sourceRoot":""}