{"version":3,"file":"static/js/795.a7787200.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/SectionsWrapper/SectionsWrapper.module.css?b8e8","components/SectionsWrapper/SectionsWrapper.jsx","hooks/useContacts.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactListItem/ContactListItem.module.css?fe27","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","pages/PhonebookPage.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Title\":\"Section_Title__FKTo0\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport function Section({ tag, title, children }) {\n  const CustomTag = `${tag}`;\n\n  return (\n    <section>\n      {title && <CustomTag className={styles.Title}>{title}</CustomTag>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  tag: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"SectionsWrapper_Container__dfvdv\"};","import styles from './SectionsWrapper.module.css';\n\nexport function SectionsWrapper({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact, deleteContact } from 'redux/contacts/contactsOperations';\nimport { setFilter } from '../redux/contacts/contactsSlice';\n\nexport function useContacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.entities);\n  const filter = useSelector(state => state.contacts.filter);\n  const status = useSelector(state => state.contacts.status);\n\n  const handleAddContact = newContact => dispatch(addContact(newContact));\n  const handleDeleteContact = id => dispatch(deleteContact(id));\n  const handleSetFilter = value => dispatch(setFilter(value));\n\n  return {\n    dispatch,\n    contacts,\n    filter,\n    status,\n    addContact: handleAddContact,\n    deleteContact: handleDeleteContact,\n    setFilter: handleSetFilter,\n  };\n}\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useContacts } from 'hooks/useContacts';\nimport { toast } from 'react-toastify';\nimport styles from './ContactForm.module.css';\n\nconst registerSchema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required().min(8).max(16),\n});\n\nexport function ContactForm() {\n  const { contacts, addContact } = useContacts();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(registerSchema),\n  });\n\n  const onSubmit = async data => {\n    const alreadyInContacts = contacts.some(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    );\n\n    try {\n      if (alreadyInContacts) {\n        toast.error(`${data.name.toUpperCase()} is already in contacts.`);\n      } else {\n        await addContact(data);\n        toast.success(`${data.name.toUpperCase()} is added to contacts.`);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    reset();\n  };\n\n  return (\n    <form\n      className={styles.Form}\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <label className={styles.Label}>\n        <input\n          className={styles.Input}\n          {...register('name')}\n          type=\"text\"\n          placeholder=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n        {errors.name && (\n          <p className={styles.ErrorMessage}>{errors.name.message}</p>\n        )}\n      </label>\n\n      <label className={styles.Label}>\n        <input\n          className={styles.Input}\n          {...register('number')}\n          type=\"tel\"\n          placeholder=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n        {errors.number && (\n          <p className={styles.ErrorMessage}>{errors.number.message}</p>\n        )}\n      </label>\n\n      <button type=\"submit\" className={styles.SubmitBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Item\":\"ContactListItem_Item__xlh1I\",\"Contact\":\"ContactListItem_Contact__5WetT\",\"Name\":\"ContactListItem_Name__OCYDH\",\"Number\":\"ContactListItem_Number__3y14D\",\"Icon\":\"ContactListItem_Icon__WcbrX\",\"DeleteBtn\":\"ContactListItem_DeleteBtn__FnG2B\"};","import PropTypes from 'prop-types';\nimport { useContacts } from 'hooks/useContacts';\nimport { MdDelete, MdPerson, MdPhone } from 'react-icons/md';\nimport { toast } from 'react-toastify';\nimport styles from './ContactListItem.module.css';\n\nexport function ContactListItem({ id, name, number }) {\n  const { deleteContact } = useContacts();\n\n  async function handleDeleteContact(id, name) {\n    try {\n      await deleteContact(id);\n      toast.info(`${name.toUpperCase()} has been removed from contacts.`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <li className={styles.Item}>\n      <span className={styles.Contact}>\n        <span className={styles.Name}>\n          <MdPerson className={styles.Icon} />\n          {name}\n        </span>{' '}\n        <span className={styles.Number}>\n          <MdPhone className={styles.Icon} />\n          {number}\n        </span>\n      </span>\n      <button\n        type=\"button\"\n        className={styles.DeleteBtn}\n        onClick={() => handleDeleteContact(id, name)}\n      >\n        <MdDelete className={styles.Icon} />\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactListItem } from './ContactListItem';\nimport { useEffect } from 'react';\nimport { getContacts } from 'redux/contacts/contactsOperations';\n\nexport function ContactList() {\n  const { dispatch, contacts, filter } = useContacts();\n\n  const filteredContacts = contacts\n    .filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {contacts && (\n        <ul>\n          {filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"Filter_Label__MldcW\",\"Input\":\"Filter_Input__fqOVl\"};","import { useContacts } from 'hooks/useContacts';\nimport styles from './Filter.module.css';\n\nexport function Filter() {\n  const { filter, setFilter } = useContacts();\n\n  function handleFilterInputChange(event) {\n    const { value } = event.currentTarget;\n    setFilter(value);\n  }\n\n  return (\n    <label className={styles.Label}>\n      <input\n        className={styles.Input}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"find contacts by name\"\n        value={filter}\n        onChange={handleFilterInputChange}\n      ></input>\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Notification\":\"Notification_Notification__9HZmX\"};","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nexport function Notification({ message }) {\n  return <>{message && <h3 className={styles.Notification}>{message}</h3>}</>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { SectionsWrapper } from 'components/SectionsWrapper';\nimport { Section } from 'components/Section';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Oval } from 'react-loader-spinner';\nimport { OvalLoader } from 'components/Loaders/OvalLoader';\nimport { Notification } from 'components/Notification';\n\nexport default function PhonebookPage() {\n  const { contacts, status } = useContacts();\n  return (\n    <SectionsWrapper>\n      {(status === 'deleteLoading' || status === 'addLoading') && (\n        <OvalLoader />\n      )}\n\n      <Section tag={'h1'} title={'Phonebook'}>\n        <ContactForm />\n      </Section>\n\n      <Section tag={'h2'} title={'Contacts'}>\n        {status === 'loading' && contacts.length === 0 && (\n          <Oval\n            ariaLabel=\"loading-indicator\"\n            height={30}\n            width={30}\n            strokeWidth={5}\n            color=\"var(--theme-color)\"\n            secondaryColor=\"#ccc\"\n          />\n        )}\n        <>\n          {(status === 'resolved' || status === 'deleteResolved') &&\n          contacts.length === 0 ? (\n            <Notification message={'No contacts added'} />\n          ) : (\n            <>\n              {contacts.length > 0 && <Filter />}\n              <ContactList />\n            </>\n          )}\n        </>\n      </Section>\n    </SectionsWrapper>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"ContactForm_Form__IBmOq\",\"Label\":\"ContactForm_Label__ykus5\",\"Input\":\"ContactForm_Input__+bOEZ\",\"SubmitBtn\":\"ContactForm_SubmitBtn__IC-Dc\",\"ErrorMessage\":\"ContactForm_ErrorMessage__ttuE5\"};"],"names":["Section","tag","title","children","CustomTag","className","styles","SectionsWrapper","useContacts","dispatch","useDispatch","contacts","useSelector","state","entities","filter","status","addContact","newContact","deleteContact","id","setFilter","value","registerSchema","yup","shape","name","required","number","min","max","ContactForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","data","alreadyInContacts","some","contact","toLowerCase","toast","toUpperCase","console","log","autoComplete","type","placeholder","pattern","message","ContactListItem","onClick","handleDeleteContact","ContactList","filteredContacts","includes","sort","a","b","localeCompare","useEffect","getContacts","map","Filter","onChange","event","currentTarget","Notification","PhonebookPage","OvalLoader","length","ariaLabel","height","width","strokeWidth","color","secondaryColor"],"sourceRoot":""}